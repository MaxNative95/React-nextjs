{"ast":null,"code":"var _jsxFileName = \"/Users/maxgarcia/Desktop/hello-nextjs/pages/News.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport Router from 'next/router';\n\nconst News = ({\n  news\n}) => {\n  //const [searchQuery, setSearchQuery] = useState('react');\n  const {\n    0: value,\n    1: setValue\n  } = useState({\n    text: 'react',\n    coolMsg: ''\n  });\n\n  const handleChange = name => e => {\n    // setSearchQuery(e.target.value)\n    setValue(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    Router.push(`/news/?searchTerm=${searchQuery}`);\n  };\n\n  const searchForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: searchQuery,\n    onChange: handleChange('text'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    placeholder: \"type something...\",\n    onChange: handleChange('coolMsg'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Search\"));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \" List of News\"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), searchForm(), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), news.map((item, i) => __jsx(\"p\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: item.url,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, item.title))));\n};\n\nNews.getInitialProps = async ({\n  query\n}) => {\n  let news;\n\n  try {\n    const res = await fetch(`https:/hn.algolia.com/api/v1/search?query=${query.searchTerm}`);\n    news = await res.json();\n    console.log(news.hits);\n  } catch (error) {\n    console.log(`There was an error ${error}`);\n    news = [];\n  }\n\n  return {\n    news: news.hits\n  };\n};\n\nexport default News;","map":{"version":3,"sources":["/Users/maxgarcia/Desktop/hello-nextjs/pages/News.js"],"names":["useState","Link","Layout","Router","News","news","value","setValue","text","coolMsg","handleChange","name","e","values","target","handleSubmit","preventDefault","push","searchQuery","searchForm","map","item","i","url","title","getInitialProps","query","res","fetch","searchTerm","json","console","log","hits","error"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAEvB;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC;AAC/BQ,IAAAA,IAAI,EAAC,OAD0B;AAE/BC,IAAAA,OAAO,EAAC;AAFuB,GAAD,CAAlC;;AAKA,QAAMC,YAAY,GAAGC,IAAI,IAAIC,CAAC,IAAI;AAC9B;AACAL,IAAAA,QAAQ,iCAAKM,MAAL;AAAa,OAACF,IAAD,GAASC,CAAC,CAACE,MAAF,CAASR;AAA/B,OAAR;AACH,GAHD;;AAKA,QAAMS,YAAY,GAAGH,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACI,cAAF;AACAb,IAAAA,MAAM,CAACc,IAAP,CAAa,qBAAoBC,WAAY,EAA7C;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAG,MACf;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEG,WAA1B;AAAuC,IAAA,QAAQ,EAAER,YAAY,CAAC,MAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,WAAW,EAAC,mBAAnB;AAAuC,IAAA,QAAQ,EAAEA,YAAY,CAAC,SAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ;;AAQA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKS,UAAU,EAHf,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKd,IAAI,CAACe,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KACN;AAAG,IAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAED,IAAI,CAACE,GAAd;AAAmB,IAAA,MAAM,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCF,IAAI,CAACG,KAAzC,CADJ,CADH,CALL,CADJ;AAaH,CAvCD;;AAyCApB,IAAI,CAACqB,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACxC,MAAIrB,IAAJ;;AACA,MAAI;AACA,UAAMsB,GAAG,GAAG,MAAMC,KAAK,CAAE,6CAA4CF,KAAK,CAACG,UAAW,EAA/D,CAAvB;AACAxB,IAAAA,IAAI,GAAG,MAAMsB,GAAG,CAACG,IAAJ,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY3B,IAAI,CAAC4B,IAAjB;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZH,IAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBE,KAAM,EAAxC;AACA7B,IAAAA,IAAI,GAAG,EAAP;AACH;;AACD,SAAO;AACHA,IAAAA,IAAI,EAAEA,IAAI,CAAC4B;AADR,GAAP;AAGH,CAbD;;AAeA,eAAe7B,IAAf","sourcesContent":["import { useState } from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport Router from 'next/router';\n\nconst News = ({ news }) => {\n\n    //const [searchQuery, setSearchQuery] = useState('react');\n    const [value, setValue] = useState({\n        text:'react',\n        coolMsg:''\n    });\n\n    const handleChange = name => e => {\n        // setSearchQuery(e.target.value)\n        setValue({...values, [name] : e.target.value})\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        Router.push(`/news/?searchTerm=${searchQuery}`)\n    }\n\n    const searchForm = () => (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={searchQuery} onChange={handleChange('text')} />\n            <input placeholder=\"type something...\" onChange={handleChange('coolMsg')} />\n            <button>Search</button>\n        </form>\n    )\n\n    return (\n        <Layout>\n            <h2> List of News</h2>\n            <hr />\n            {searchForm()}\n            <hr />\n            {news.map((item, i) => (\n                <p key={i}>\n                    <a href={item.url} target=\"_blank\">{item.title}</a>\n                </p>\n            ))}\n        </Layout>\n    )\n};\n\nNews.getInitialProps = async ({ query }) => {\n    let news;\n    try {\n        const res = await fetch(`https:/hn.algolia.com/api/v1/search?query=${query.searchTerm}`);\n        news = await res.json();\n        console.log(news.hits);\n    } catch (error) {\n        console.log(`There was an error ${error}`)\n        news = [];\n    }\n    return {\n        news: news.hits\n    };\n};\n\nexport default News;"]},"metadata":{},"sourceType":"module"}